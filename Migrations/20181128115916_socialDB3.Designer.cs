// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using quizartsocial_backend.Models;

namespace backEnd.Migrations
{
    [DbContext(typeof(efmodel))]
    [Migration("20181128115916_socialDB3")]
    partial class socialDB3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("quizartsocial_backend.Models.Comment", b =>
                {
                    b.Property<int>("comment_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PostForeignKey");

                    b.Property<string>("UsercomForeignKey");

                    b.Property<string>("comment");

                    b.HasKey("comment_id");

                    b.HasIndex("PostForeignKey");

                    b.HasIndex("UsercomForeignKey");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("quizartsocial_backend.Models.Post", b =>
                {
                    b.Property<int>("post_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TopicForeignKey");

                    b.Property<string>("UserForeignKey");

                    b.Property<string>("posts");

                    b.HasKey("post_id");

                    b.HasIndex("TopicForeignKey");

                    b.HasIndex("UserForeignKey");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("quizartsocial_backend.Models.Topic", b =>
                {
                    b.Property<int>("topic_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("topic_image");

                    b.Property<string>("topic_name");

                    b.HasKey("topic_id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("quizartsocial_backend.Models.User", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("image");

                    b.Property<string>("name");

                    b.Property<int>("score");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("quizartsocial_backend.Models.Comment", b =>
                {
                    b.HasOne("quizartsocial_backend.Models.Post")
                        .WithMany("comment_data")
                        .HasForeignKey("PostForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("quizartsocial_backend.Models.User")
                        .WithMany("comment_data")
                        .HasForeignKey("UsercomForeignKey")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("quizartsocial_backend.Models.Post", b =>
                {
                    b.HasOne("quizartsocial_backend.Models.Topic")
                        .WithMany("posts")
                        .HasForeignKey("TopicForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("quizartsocial_backend.Models.User")
                        .WithMany("posts")
                        .HasForeignKey("UserForeignKey")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
